@model Task_Management_System.Models.DTOs.ManagerViewModel

<form id="managerForm" method="post" asp-action="AddOrEdit" asp-controller="Manager">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Manager Form</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @Html.HiddenFor(m => m.Id)

                <div class="mb-3">
                    @Html.LabelFor(m => m.Name)
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                </div>
                <div class="mb-3">
                    @Html.LabelFor(m => m.Email)
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
                <div class="mb-3">
                    @Html.LabelFor(m => m.Gender)
                    @Html.DropDownListFor(m => m.Gender, new SelectList(new[] { "Male", "Female" }), "Select", new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Gender, "", new { @class = "text-danger" })
                </div>
                <div class="mb-3">
                    @Html.LabelFor(m => m.JoinDate)
                    @Html.TextBoxFor(m => m.JoinDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                    @Html.ValidationMessageFor(m => m.JoinDate, "", new { @class = "text-danger" })
                </div>
                <div class="mb-3">
                    @Html.LabelFor(m => m.Status)
                    @Html.DropDownListFor(m => m.Status, new SelectList(new[] { "Active", "De-Active" }), "Select", new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Status, "", new { @class = "text-danger" })
                </div>
                @if (Model.Id == 0)
                {
                    <div class="mb-3">
                        @Html.LabelFor(m => m.Password)
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="submit" class="btn btn-primary">Save</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</form>

@section Scripts {
    <script>
        // AJAX submit form
        $(document).on('submit', '#managerForm', function (e) {
            e.preventDefault();

            var form = $(this);
            $.ajax({
                url: form.attr('action'),
                type: 'POST',
                data: form.serialize(),
                headers: { 'X-Requested-With': 'XMLHttpRequest' },
                success: function (res) {
                    if (res.success) {
                        var modalEl = document.getElementById('managerModal');
                        var modal = bootstrap.Modal.getInstance(modalEl);
                        modal.hide();
                        location.reload();
                    } else {
                        // Partial view with validation errors
                        $('#managerModal').html(res);
                    }
                },
                error: function () {
                    alert("An error occurred while saving the manager.");
                }
            });
        });
    </script>
}
