@{
    ViewData["Title"] = "User Task Assignments";
}

<div class="container-fluid mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2 class="mb-1">User Task Assignments</h2>
            <small class="text-muted">Assign tasks to active users and view completed tasks</small>
        </div>
        <button class="btn btn-success d-flex align-items-center" id="btnAdd" aria-label="Add Assignment">
            <i class="bi bi-plus-lg me-2"></i> Assign Task
        </button>
    </div>

    <div class="card shadow-sm">
        <div class="card-body p-3">
            <table id="userTaskTable" class="table table-striped table-hover table-bordered align-middle w-100" style="min-width: 700px;">
            </table>
        </div>
    </div>

    <div class="modal fade" id="modalContainer" tabindex="-1" aria-hidden="true" aria-labelledby="modalTitle" data-bs-backdrop="static" data-bs-keyboard="false">
        <div class="modal-dialog">
            <div class="modal-content"></div>
        </div>
    </div>
</div>

@section Scripts {


    <style>
        #userTaskTable button.btn {
            min-width: 36px;
            padding: 0.25rem 0.5rem;
            font-size: 0.9rem;
            border-radius: 0.375rem;
        }

            #userTaskTable button.btn i {
                pointer-events: none;
            }

        #userTaskTable button.btn-warning:hover,
        #userTaskTable button.btn-warning:focus {
            background-color: #ffc107;
            border-color: #ffc107;
            color: #212529;
        }

        #userTaskTable button.btn-danger:hover,
        #userTaskTable button.btn-danger:focus {
            background-color: #dc3545;
            border-color: #dc3545;
            color: white;
        }
    </style>

    <script>
        var userTaskTable;

        $(document).ready(function () {
            initializeTable();

            $('#btnAdd').click(function () {
                $.get('/UserTasks/Create', function (html) {
                    $('#modalContainer .modal-content').html(html);
                    var modal = new bootstrap.Modal(document.getElementById('modalContainer'));
                    modal.show();
                });
            });
        });

        function initializeTable() {
            userTaskTable = $('#userTaskTable').DataTable({
                processing: true,
                serverSide: true,
                ajax: {
                    url: '/UserTasks/GetAll',
                    type: 'POST'
                },
                columns: [
                    { data: 'userName', title: 'User Name' },
                    { data: 'taskTitle', title: 'Task Title' },
                    { data: 'taskStatus', title: 'Task Status', width: "120px" },
                    { data: 'assignedDate', title: 'Assigned Date', width: "140px" },
                    {
                        data: 'id',
                        title: 'Actions',
                        orderable: false,
                        searchable: false,
                        width: "140px",
                        className: "text-center align-middle",
                        render: function (data) {
                            return `
                                <button class="btn btn-sm btn-outline-primary me-2" title="Edit Assignment" onclick="editUserTask(${data})">
                                    Edit
                                </button>
                                <button class="btn btn-sm btn-outline-danger" title="Delete Assignment" onclick="deleteUserTask(${data})">
                                    Delete
                                </button>`;
                        }
                    }
                ],
            });
        }

        function reloadTable() {
            userTaskTable.ajax.reload(null, false);
        }

        function editUserTask(id) {
            $.get('/UserTasks/Edit/' + id, function (html) {
                $('#modalContainer .modal-content').html(html);
                var modal = new bootstrap.Modal(document.getElementById('modalContainer'));
                modal.show();
            }).fail(function () {
                showAlert('Error loading assignment data for edit.', 'danger');
            });
        }

        function deleteUserTask(id) {
            if (confirm("Are you sure you want to delete this assignment?")) {
                $.post('/UserTasks/Delete', { id: id }, function (res) {
                    if (res.success) {
                        reloadTable();
                        showAlert('Assignment deleted successfully.', 'success');
                    } else {
                        showAlert('Failed to delete assignment.', 'danger');
                    }
                }).fail(function () {
                    showAlert('Error occurred while deleting assignment.', 'danger');
                });
            }
        }

        $(document).on('submit', '#formCreateOrEdit', function (e) {
            e.preventDefault();

            var form = $(this);
            var token = form.find('input[name="__RequestVerificationToken"]').val();
            var id = form.find('input[name="Id"]').val();
            var isEdit = id && !isNaN(parseInt(id)) && parseInt(id) > 0;

            $.ajax({
                url: isEdit ? '/UserTasks/Edit' : '/UserTasks/Create',
                type: 'POST',
                data: form.serialize(),
                headers: {
                    'RequestVerificationToken': token
                },
                success: function (res) {
                    if (res.success) {
                        var modal = bootstrap.Modal.getInstance(document.getElementById('modalContainer'));
                        modal.hide();
                        reloadTable();
                        showAlert('Assignment saved successfully.', 'success');
                    } else {
                        $('#modalContainer .modal-content').html(res);
                    }
                },
                error: function () {
                    showAlert('Error occurred while saving assignment.', 'danger');
                }
            });
        });

        function showAlert(message, type = 'info') {
            var alertHtml = `
                <div class="alert alert-${type} alert-dismissible fade show fixed-top m-3" role="alert" style="z-index: 1100; min-width: 250px;">
                    ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>`;
            var alert = $(alertHtml).appendTo('body');
            setTimeout(() => alert.alert('close'), 4000);
        }
    </script>
}
